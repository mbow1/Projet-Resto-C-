<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADUAAAAxCAYAAAB6d+FmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAARMSURBVGhD3ZixTtxAEIZ5BB6BR0hJmTKPkEegpEQpUBqk
        lJRpkNIgJcUJWopIPAZd6EKZ8rrLfMP+1ng99tmns7mk+PB6vDs7n3fPdnK02WwmsV6vf48lG78EaTCj
        KngzgjeTS4M1ocCs+G0sLpYGa0phWcFjOUypx8enrNhByhjG3mV55yIN1lBUoSlW7SgQY+Xcx2U55yQN
        ZlBcLF5kMWHX3uQJmAYzrEiXilQCrXhp/3tSI/g/pa6vv19m+eYkDWbsKMVWvFtaLA1mUJyRFt4H/eFg
        pShMRYpMRDzdf9mcf3zv/c7OLq6ynHORBjMozMR051VsC0Rg/efZhYCbwdgs51ykwQwKQ0ZIConT03eO
        hKLU0kKQBjMoDokoRdHIsN38WISC1Oogpb59OP0hJMVRUgg1ckGq/KZWWc65SYMCkZfP5w/GBuy8+f0g
        F6W8fehSZyfHt0XKhVpiJ8cuhgjFx98SbfoUfIWz/HOSBgEptpi2WRRAqr4mkKluBCv9kM0xF2nQthbv
        JP+CoNC4rbQaxJGij29JE02EHFaLm5TNNQedQC0Ut1Y8p+3bMBClaFfX30YqCsVVkohWSESBRKIFqxXn
        2gVqG0L9OoMkFKWiHG0dS7GtleGpaHl8S+paub6TVCzaXhs3vDp6uKEPY5rBWiWj9RCQlKBwteNK+YqY
        COO4IRyj2FQpGz9GpAX9bc6rJgkniOlOc6xlxP2Hi4bni3uHtqQgik2VojgrMpUhXw1xzWXtm1YyC/Ip
        JF4HBRkJEZc80Pa4XVc8bmPOTexhjJj1bYSaGgZQDTrvSAkr7jaKCK0Mx1g4bWS8X5ioFrNrvd+B1sf/
        K40+Gq9Ca2JO5vW5X69dTZKqhSJaKaCvVkswYdnGK9HMZYVIiHFaoZhDEoJrNRIiZ0cIrLCWlIQgm4SY
        rrtYKIq2npY8dMqDx8UoBOrCSrxV9ACXjJEQdIQgSm0Tavj66EiMCSkMGdC7TufA9YLLqLARYo2IxkRa
        J0JSElKxqUzBhR9fmr4UFAXii1urNVRYvJZR9490AkXIpShODK6SYLWKGDekltG5Sf1Cqp57X3QCQ6uU
        icVYXC3Gk0dSOmqV6nn3SScwtEocM1pS1WqRC5nI1K+LqXQCSPX9lqJAbwyhSiqyyyfTVDqBWsrpE8hi
        QYoctdjBSQESkXjNkZTRJ8UnUz3vPmmdILRNaisHKuWFUNBksUTI3ikdqUW3H1J6QqVioeherJ+ElCuK
        LS5lBazqlyVYgZ+s0K3QT6vDOHIpH18B3DSEOMZ5903rxCbn08W3kopSQbFfH/SrZXSuHHOvEjQNm9y/
        nJECiintrd9agn7kkJB+a7SJ02fuVQL/Uwr5Wd9hGCskdBPKWKfkbP07ak4aIb7JJBXE/Es6GziEpGK+
        knM5KQpASmKcE99FCBhLHuUMeZeRKnfVxQI7C8EcOafgf5ispu44lTlyjmNz9Bd5vF9c0RJmggAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>